{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamma\\\\OneDrive - K L University\\\\Desktop\\\\zithara-task\\\\frontend-react\\\\src\\\\App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS file for styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [customers, setCustomers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [searchResults, setsearchReasults] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [sortBy, setSortBy] = useState('date'); // Default sort by date\n\n  const recordsPerPage = 20;\n  let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n  useEffect(() => {\n    fetchData();\n  }, [page, search, sortBy]);\n\n  const fetchData = async () => {\n    try {\n      let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n\n      if (search) {\n        // If search is provided, add search filters for name and location columns\n        url += `&name=${search}&location=${search}`;\n      }\n\n      const response = await axios.get(url);\n      setCustomers(response.data.slice((page - 1) * recordsPerPage, page * recordsPerPage));\n      setTotalPages(Math.ceil(response.data.length / recordsPerPage));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const SearchComponent = () => {\n    _s();\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchResults, setsearchReasults] = useState([]);\n  };\n\n  _s(SearchComponent, \"3caGr9D89aybjJHu3QZGgWMvm+0=\");\n\n  const handelSearch = async () => {\n    try {\n      const response = await axios.get(url);\n      setsearchReasults(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }; // Function to format date and time\n\n\n  const formatDateTime = dateTimeString => {\n    const dateTime = new Date(dateTimeString);\n    const date = dateTime.toLocaleDateString();\n    const time = dateTime.toLocaleTimeString();\n    return {\n      date,\n      time\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Customer Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorting-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortBy('date'),\n        className: `sort-btn ${sortBy === 'date' ? 'active' : ''}`,\n        children: \"Sort by Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortBy('time'),\n        className: `sort-btn ${sortBy === 'time' ? 'active' : ''}`,\n        children: \"Sort by Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"customer-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: (page - 1) * recordsPerPage + index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.customer_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), Object.values(formatDateTime(customer.created_at)).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))]\n        }, customer.sno, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: page === 1,\n        onClick: () => setPage(page - 1),\n        className: \"pagination-btn\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: [\"Page \", page, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: page === totalPages,\n        onClick: () => setPage(page + 1),\n        className: \"pagination-btn\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"vcGY8mL3/D9PMiLkr68RmWMRsNU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","App","customers","setCustomers","page","setPage","search","setSearch","searchResults","setsearchReasults","totalPages","setTotalPages","sortBy","setSortBy","recordsPerPage","url","fetchData","response","get","data","slice","Math","ceil","length","error","console","SearchComponent","searchTerm","setSearchTerm","handelSearch","formatDateTime","dateTimeString","dateTime","Date","date","toLocaleDateString","time","toLocaleTimeString","map","customer","index","customer_name","age","phone","location","Object","values","created_at","value","i","sno"],"sources":["C:/Users/Gamma/OneDrive - K L University/Desktop/zithara-task/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS file for styling\n\nfunction App() {\n  const [customers, setCustomers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [searchResults, setsearchReasults]= useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [sortBy, setSortBy] = useState('date'); // Default sort by date\n  const recordsPerPage = 20;\n  let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n   useEffect(() => {\n   fetchData();\n   }, [page, search, sortBy]);\n\n   const fetchData = async () => {\n    try {\n      let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n       if (search) {\n         // If search is provided, add search filters for name and location columns\n         url += `&name=${search}&location=${search}`;\n      }\n    \n       const response = await axios.get(url);\n      setCustomers(response.data.slice((page - 1) * recordsPerPage, page * recordsPerPage));\n      setTotalPages(Math.ceil(response.data.length / recordsPerPage));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const SearchComponent = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setsearchReasults]= useState([]);\n    }\n      const handelSearch = async() =>{\n        try{\n          const response = await axios.get(url);\n          setsearchReasults(response.data);\n        }catch(error){\n          console.error('Error fetching data:', error);\n        }\n      };\n\n  // Function to format date and time\n  const formatDateTime = (dateTimeString) => {\n    const dateTime = new Date(dateTimeString);\n    const date = dateTime.toLocaleDateString();\n    const time = dateTime.toLocaleTimeString();\n    return { date, time };\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading\">Customer Records</h1>\n      {/* <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by Customer Name or Location\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          className=\"search-input\"\n        />\n        <button onClick={fetchData} className=\"search-btn\">\n          Search\n        </button>\n      </div> */}\n      <div className=\"sorting-options\">\n        <button onClick={() => setSortBy('date')} className={`sort-btn ${sortBy === 'date' ? 'active' : ''}`}>\n          Sort by Date\n        </button>\n        <button onClick={() => setSortBy('time')} className={`sort-btn ${sortBy === 'time' ? 'active' : ''}`}>\n          Sort by Time\n        </button>\n      </div>\n      <table className=\"customer-table\">\n        <thead>\n          <tr>\n            <th>S.No</th>\n            <th>Customer Name</th>\n            <th>Age</th>\n            <th>Phone</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {customers.map((customer, index) => (\n            <tr key={customer.sno}>\n              <td>{(page - 1) * recordsPerPage + index + 1}</td>\n              <td>{customer.customer_name}</td>\n              <td>{customer.age}</td>\n              <td>{customer.phone}</td>\n              <td>{customer.location}</td>\n              {/* Splitting created_at into date and time */}\n              {Object.values(formatDateTime(customer.created_at)).map((value, i) => (\n                <td key={i}>{value}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <button disabled={page === 1} onClick={() => setPage(page - 1)} className=\"pagination-btn\">\n          Previous\n        </button>\n        <div className=\"page-numbers\">\n          Page {page} of {totalPages}\n        </div>\n        <button disabled={page === totalPages} onClick={() => setPage(page + 1)} className=\"pagination-btn\">\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}