{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamma\\\\Downloads\\\\react-crud-web-api-master\\\\react-crud-web-api-master\\\\src\\\\components\\\\add-tutorial.component.js\";\nimport React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false\n    };\n  }\n\n  saveTutorials() {\n    // Generate dummy data for 50 records\n    const dummyData = Array.from({\n      length: 50\n    }, (_, index) => ({\n      customer_name: `Customer ${index + 1}`,\n      age: Math.floor(Math.random() * 100),\n      phone: `+123456789${index.toString().padStart(2, '0')}`,\n      location: `Location ${index + 1}`,\n      created_at: new Date()\n    })); // Make requests to create records\n\n    Promise.all(dummyData.map(data => TutorialDataService.create(data))).then(responses => {\n      console.log(\"Records created successfully:\", responses);\n      this.setState({\n        submitted: true\n      });\n    }).catch(error => {\n      console.error(\"Error creating records:\", error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: this.state.submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Records created successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.saveTutorials(),\n          className: \"btn btn-success\",\n          children: \"Create 50 Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","TutorialDataService","AddTutorial","constructor","props","state","submitted","saveTutorials","dummyData","Array","from","length","_","index","customer_name","age","Math","floor","random","phone","toString","padStart","location","created_at","Date","Promise","all","map","data","create","then","responses","console","log","setState","catch","error","render"],"sources":["C:/Users/Gamma/Downloads/react-crud-web-api-master/react-crud-web-api-master/src/components/add-tutorial.component.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submitted: false\n    };\n  }\n\n  saveTutorials() {\n    // Generate dummy data for 50 records\n    const dummyData = Array.from({ length: 50 }, (_, index) => ({\n      customer_name: `Customer ${index + 1}`,\n      age: Math.floor(Math.random() * 100),\n      phone: `+123456789${index.toString().padStart(2, '0')}`,\n      location: `Location ${index + 1}`,\n      created_at: new Date()\n    }));\n\n    // Make requests to create records\n    Promise.all(dummyData.map(data => TutorialDataService.create(data)))\n      .then(responses => {\n        console.log(\"Records created successfully:\", responses);\n        this.setState({ submitted: true });\n      })\n      .catch(error => {\n        console.error(\"Error creating records:\", error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Records created successfully!</h4>\n          </div>\n        ) : (\n          <div>\n            <button onClick={() => this.saveTutorials()} className=\"btn btn-success\">\n              Create 50 Records\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;EACjDG,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACXC,SAAS,EAAE;IADA,CAAb;EAGD;;EAEDC,aAAa,GAAG;IACd;IACA,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW;MAAEC,MAAM,EAAE;IAAV,CAAX,EAA2B,CAACC,CAAD,EAAIC,KAAJ,MAAe;MAC1DC,aAAa,EAAG,YAAWD,KAAK,GAAG,CAAE,EADqB;MAE1DE,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAFqD;MAG1DC,KAAK,EAAG,aAAYN,KAAK,CAACO,QAAN,GAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAkC,EAHI;MAI1DC,QAAQ,EAAG,YAAWT,KAAK,GAAG,CAAE,EAJ0B;MAK1DU,UAAU,EAAE,IAAIC,IAAJ;IAL8C,CAAf,CAA3B,CAAlB,CAFc,CAUd;;IACAC,OAAO,CAACC,GAAR,CAAYlB,SAAS,CAACmB,GAAV,CAAcC,IAAI,IAAI3B,mBAAmB,CAAC4B,MAApB,CAA2BD,IAA3B,CAAtB,CAAZ,EACGE,IADH,CACQC,SAAS,IAAI;MACjBC,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,SAA7C;MACA,KAAKG,QAAL,CAAc;QAAE5B,SAAS,EAAE;MAAb,CAAd;IACD,CAJH,EAKG6B,KALH,CAKSC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;IACD,CAPH;EAQD;;EAEDC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,aAAf;MAAA,UACG,KAAKhC,KAAL,CAAWC,SAAX,gBACC;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADD,gBAKC;QAAA,uBACE;UAAQ,OAAO,EAAE,MAAM,KAAKC,aAAL,EAAvB;UAA6C,SAAS,EAAC,iBAAvD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IANJ;MAAA;MAAA;MAAA;IAAA,QADF;EAeD;;AA9CgD"},"metadata":{},"sourceType":"module"}