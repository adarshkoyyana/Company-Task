{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamma\\\\OneDrive - K L University\\\\Desktop\\\\zithara-task\\\\frontend-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS file for styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [customers, setCustomers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const [sortBy, setSortBy] = useState('date'); // Default sort by date\n\n  const [filteredData, setFilteredData] = useState([]);\n  const recordsPerPage = 20;\n  useEffect(() => {\n    fetchData();\n  }, [page, search]);\n\n  const fetchData = async () => {\n    try {\n      let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n\n      if (search) {\n        // If search is provided, add search filters for name and location columns\n        url += `&customer_name=${search}&location=${search}`;\n      }\n\n      const response = await axios.get(url);\n      setCustomers(response.data.slice((page - 1) * recordsPerPage, page * recordsPerPage));\n      setTotalPages(Math.ceil(response.data.length / recordsPerPage));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }; // Function to handle sorting when sort button is clicked\n  // const handleSort = (sortOption) => {\n  //   if (sortBy !== sortOption) {\n  //     setSortBy(sortOption);\n  //     setPage(1); // Reset page to 1 when changing sort option\n  //   }\n  // };\n\n\n  useEffect(() => {\n    handleSort();\n  }, [sortBy]);\n\n  const handleSort = async sortdate => {\n    let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n    let response = await axios.get(url);\n    const sortedData = [...filteredData].sort((a, b) => {\n      if (sortdate === 'date') {\n        return new Date(a.created_at) - new Date(b.created_at);\n      } else if (sortdate === 'time') {\n        return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n      }\n    });\n    setFilteredData({\n      sortedData\n    });\n  }; // Function to format date and time\n\n\n  const formatDate = dateTimeString => {\n    const date = new Date(dateTimeString);\n    return date.toLocaleDateString();\n  };\n\n  const formatTime = dateTimeString => {\n    const time = new Date(dateTimeString);\n    return time.toLocaleTimeString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Customer Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Customer Name or Location\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"customer-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: (page - 1) * recordsPerPage + index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.customer_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(customer.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatTime(customer.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, customer.sno, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: page === 1,\n        onClick: () => setPage(page - 1),\n        className: \"pagination-btn\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: [\"Page \", page, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: page === totalPages,\n        onClick: () => setPage(page + 1),\n        className: \"pagination-btn\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aG0vr7tiUeG816mtQPGh9V8XJ0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","App","customers","setCustomers","page","setPage","search","setSearch","totalPages","setTotalPages","sortBy","setSortBy","filteredData","setFilteredData","recordsPerPage","fetchData","url","response","get","data","slice","Math","ceil","length","error","console","handleSort","sortdate","sortedData","sort","a","b","Date","created_at","getTime","formatDate","dateTimeString","date","toLocaleDateString","formatTime","time","toLocaleTimeString","e","target","value","map","customer","index","customer_name","age","phone","location","sno"],"sources":["C:/Users/Gamma/OneDrive - K L University/Desktop/zithara-task/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS file for styling\n\nfunction App() {\n  const [customers, setCustomers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const [sortBy, setSortBy] = useState('date'); // Default sort by date\n  const [filteredData, setFilteredData] = useState([]);\n  const recordsPerPage = 20;\n  \n\n  useEffect(() => {\n    fetchData();\n  }, [page, search]);\n\n  const fetchData = async () => {\n    try {\n      let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n      if (search) {\n        // If search is provided, add search filters for name and location columns\n        url += `&customer_name=${search}&location=${search}`;\n      }\n      const response = await axios.get(url);\n      setCustomers(response.data.slice((page - 1) * recordsPerPage, page * recordsPerPage));\n      setTotalPages(Math.ceil(response.data.length / recordsPerPage));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Function to handle sorting when sort button is clicked\n  // const handleSort = (sortOption) => {\n  //   if (sortBy !== sortOption) {\n  //     setSortBy(sortOption);\n  //     setPage(1); // Reset page to 1 when changing sort option\n  //   }\n  // };\n  useEffect(() => {\n    handleSort();\n  }, [sortBy]);\n  const handleSort = async(sortdate)=>{\n    let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n    let response = await axios.get(url);\n    const sortedData = [...filteredData].sort((a,b) =>{\n      if(sortdate === 'date'){\n        return new Date(a.created_at) - new Date(b.created_at);\n      }else if (sortdate === 'time') {\n        return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n      }\n    });\n    setFilteredData({sortedData});     \n  }\n\n  // Function to format date and time\n  const formatDate = (dateTimeString) => {\n    const date = new Date(dateTimeString);\n    return date.toLocaleDateString();\n  };\n\n  const formatTime = (dateTimeString) => {\n    const time = new Date(dateTimeString);\n    return time.toLocaleTimeString();\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading\">Customer Records</h1>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by Customer Name or Location\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          className=\"search-input\"\n        />\n        <button onClick={fetchData} className=\"search-btn\">\n          Search\n        </button>\n      </div>\n      \n      <table className=\"customer-table\">\n        <thead>\n          <tr>\n            <th>S.No</th>\n            <th>Customer Name</th>\n            <th>Age</th>\n            <th>Phone</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {customers.map((customer, index) => (\n            <tr key={customer.sno}>\n              <td>{(page - 1) * recordsPerPage + index + 1}</td>\n              <td>{customer.customer_name}</td>\n              <td>{customer.age}</td>\n              <td>{customer.phone}</td>\n              <td>{customer.location}</td>\n              <td>{formatDate(customer.created_at)}</td>\n              <td>{formatTime(customer.created_at)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <button disabled={page === 1} onClick={() => setPage(page - 1)} className=\"pagination-btn\">\n          Previous\n        </button>\n        <div className=\"page-numbers\">\n          Page {page} of {totalPages}\n        </div>\n        <button disabled={page === totalPages} onClick={() => setPage(page + 1)} className=\"pagination-btn\">\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}