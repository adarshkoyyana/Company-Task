{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamma\\\\OneDrive - K L University\\\\Desktop\\\\zithara-task\\\\frontend-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport zitharaLogo from './zithara-logo.png'; // Import the logo image\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [customers, setCustomers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const [sortBy, setSortBy] = useState('date');\n  const [sortedData, setSortedData] = useState([]);\n  const [sortOrder, setSortOrder] = useState('desc');\n  const recordsPerPage = 20;\n  useEffect(() => {\n    fetchData();\n  }, [page, search]);\n\n  const fetchData = async () => {\n    try {\n      let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n\n      if (search) {\n        url += `&customer_name=${search}&location=${search}`;\n      }\n\n      const response = await axios.get(url);\n      const slicedData = response.data.slice((page - 1) * recordsPerPage, page * recordsPerPage);\n      setCustomers(slicedData);\n      setSortedData(slicedData);\n      setTotalPages(Math.ceil(response.data.length / recordsPerPage));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const sortData = (data, sortBy, order) => {\n    const sorted = [...data].sort((a, b) => {\n      if (sortBy === 'date') {\n        const dateA = new Date(a.created_at);\n        const dateB = new Date(b.created_at);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      } else if (sortBy === 'time') {\n        const timeA = new Date(a.created_at).getTime();\n        const timeB = new Date(b.created_at).getTime();\n        return order === 'asc' ? timeA - timeB : timeB - timeA;\n      }\n\n      return 0;\n    });\n    return sorted;\n  };\n\n  const handleSortByDate = () => {\n    const newOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newOrder);\n    setSortBy('date');\n    setSortedData(sortData(customers, 'date', newOrder));\n  };\n\n  const handleSortByTime = () => {\n    const newOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newOrder);\n    setSortBy('time');\n    setSortedData(sortData(customers, 'time', newOrder));\n  };\n\n  const formatDate = dateTimeString => {\n    const date = new Date(dateTimeString);\n    return date.toLocaleDateString();\n  };\n\n  const formatTime = dateTimeString => {\n    const time = new Date(dateTimeString);\n    return time.toLocaleTimeString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: zitharaLogo,\n      alt: \"Zithara Logo\",\n      className: \"company-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Customer Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gy1U7aIw4DXrzr9uRHwnnfLjfcw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","zitharaLogo","App","customers","setCustomers","page","setPage","search","setSearch","totalPages","setTotalPages","sortBy","setSortBy","sortedData","setSortedData","sortOrder","setSortOrder","recordsPerPage","fetchData","url","response","get","slicedData","data","slice","Math","ceil","length","error","console","sortData","order","sorted","sort","a","b","dateA","Date","created_at","dateB","timeA","getTime","timeB","handleSortByDate","newOrder","handleSortByTime","formatDate","dateTimeString","date","toLocaleDateString","formatTime","time","toLocaleTimeString"],"sources":["C:/Users/Gamma/OneDrive - K L University/Desktop/zithara-task/frontend-react/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport zitharaLogo from './zithara-logo.png'; // Import the logo image\n\nfunction App() {\n  const [customers, setCustomers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const [sortBy, setSortBy] = useState('date');\n  const [sortedData, setSortedData] = useState([]);\n  const [sortOrder, setSortOrder] = useState('desc');\n  const recordsPerPage = 20;\n\n  useEffect(() => {\n    fetchData();\n  }, [page, search]);\n\n  const fetchData = async () => {\n    try {\n      let url = `http://localhost:8080/api/records?page=${page}&search=${search}&sortBy=${sortBy}`;\n      if (search) {\n        url += `&customer_name=${search}&location=${search}`;\n      }\n      const response = await axios.get(url);\n      const slicedData = response.data.slice((page - 1) * recordsPerPage, page * recordsPerPage);\n      setCustomers(slicedData);\n      setSortedData(slicedData);\n      setTotalPages(Math.ceil(response.data.length / recordsPerPage));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const sortData = (data, sortBy, order) => {\n    const sorted = [...data].sort((a, b) => {\n      if (sortBy === 'date') {\n        const dateA = new Date(a.created_at);\n        const dateB = new Date(b.created_at);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      } else if (sortBy === 'time') {\n        const timeA = new Date(a.created_at).getTime();\n        const timeB = new Date(b.created_at).getTime();\n        return order === 'asc' ? timeA - timeB : timeB - timeA;\n      }\n      return 0;\n    });\n\n    return sorted;\n  };\n\n  const handleSortByDate = () => {\n    const newOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newOrder);\n    setSortBy('date');\n    setSortedData(sortData(customers, 'date', newOrder));\n  };\n\n  const handleSortByTime = () => {\n    const newOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newOrder);\n    setSortBy('time');\n    setSortedData(sortData(customers, 'time', newOrder));\n  };\n\n  const formatDate = (dateTimeString) => {\n    const date = new Date(dateTimeString);\n    return date.toLocaleDateString();\n  };\n\n  const formatTime = (dateTimeString) => {\n    const time = new Date(dateTimeString);\n    return time.toLocaleTimeString();\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Add the company logo */}\n      <img src={zitharaLogo} alt=\"Zithara Logo\" className=\"company-logo\" />\n      <h1 className=\"heading\">Customer Records</h1>\n      <div className=\"search-container\">\n        {/* Rest of your code */}\n      </div>\n      {/* Rest of your code */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}