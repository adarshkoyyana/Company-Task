{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamma\\\\Downloads\\\\react-crud-web-api-master\\\\react-crud-web-api-master\\\\src\\\\components\\\\add-tutorial.component.js\";\nimport React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n      psqlDetails: {},\n      // Add state for PostgreSQL details\n      submitted: false\n    };\n  }\n\n  componentDidMount() {\n    // Fetch PostgreSQL details when the component mounts\n    this.fetchPsqlDetails();\n  }\n\n  fetchPsqlDetails() {\n    // Fetch PostgreSQL details from your backend\n    TutorialDataService.getPsqlDetails().then(response => {\n      this.setState({\n        psqlDetails: response.data\n      });\n    }).catch(error => {\n      console.error(\"Error fetching PostgreSQL details:\", error);\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveTutorial() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n    TutorialDataService.create(data).then(response => {\n      this.setState({\n        id: response.data.id,\n        title: response.data.title,\n        description: response.data.description,\n        published: response.data.published,\n        submitted: true\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  newTutorial() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    });\n  }\n\n  render() {\n    const {\n      psqlDetails\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PostgreSQL Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Host: \", psqlDetails.HOST]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", psqlDetails.USER]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-form\",\n        children: this.state.submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"You submitted successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.newTutorial,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"title\",\n              required: true,\n              value: this.state.title,\n              onChange: this.onChangeTitle,\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"description\",\n              required: true,\n              value: this.state.description,\n              onChange: this.onChangeDescription,\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.saveTutorial,\n            className: \"btn btn-success\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","TutorialDataService","AddTutorial","constructor","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","id","title","description","published","psqlDetails","submitted","componentDidMount","fetchPsqlDetails","getPsqlDetails","then","response","setState","data","catch","error","console","e","target","value","create","log","render","HOST","USER"],"sources":["C:/Users/Gamma/Downloads/react-crud-web-api-master/react-crud-web-api-master/src/components/add-tutorial.component.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\", \n      published: false,\n      psqlDetails: {}, // Add state for PostgreSQL details\n\n      submitted: false\n    };\n  }\n\n  componentDidMount() {\n    // Fetch PostgreSQL details when the component mounts\n    this.fetchPsqlDetails();\n  }\n\n  fetchPsqlDetails() {\n    // Fetch PostgreSQL details from your backend\n    TutorialDataService.getPsqlDetails()\n      .then(response => {\n        this.setState({ psqlDetails: response.data });\n      })\n      .catch(error => {\n        console.error(\"Error fetching PostgreSQL details:\", error);\n      });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveTutorial() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n\n    TutorialDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    const { psqlDetails } = this.state;\n\n    return (\n      <div>\n        {/* Display PostgreSQL details */}\n        <div>\n          <h2>PostgreSQL Details:</h2>\n          <p>Host: {psqlDetails.HOST}</p>\n          <p>User: {psqlDetails.USER}</p>\n          {/* Add more details as needed */}\n        </div>\n\n        {/* Form for adding tutorial */}\n        <div className=\"submit-form\">\n          {/* Conditional rendering based on form submission */}\n          {this.state.submitted ? (\n            <div>\n              <h4>You submitted successfully!</h4>\n              <button className=\"btn btn-success\" onClick={this.newTutorial}>\n                Add\n              </button>\n            </div>\n          ) : (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  required\n                  value={this.state.title}\n                  onChange={this.onChangeTitle}\n                  name=\"title\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  required\n                  value={this.state.description}\n                  onChange={this.onChangeDescription}\n                  name=\"description\"\n                />\n              </div>\n\n              <button onClick={this.saveTutorial} className=\"btn btn-success\">\n                Submit\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}